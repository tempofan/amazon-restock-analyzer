version: '3.8'

services:
  amazon-restock:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    container_name: amazon-restock-tool
    restart: unless-stopped
    environment:
      - LINGXING_APP_ID=${LINGXING_APP_ID}
      - LINGXING_APP_SECRET=${LINGXING_APP_SECRET}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-False}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./output:/app/output
    ports:
      - "8000:8000"
    networks:
      - amazon-restock-network
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 可选：添加数据库服务
  # postgres:
  #   image: postgres:13
  #   container_name: amazon-restock-db
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: amazon_restock
  #     POSTGRES_USER: ${DB_USER:-postgres}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - amazon-restock-network

  # 可选：添加Redis缓存服务
  # redis:
  #   image: redis:6-alpine
  #   container_name: amazon-restock-redis
  #   restart: unless-stopped
  #   networks:
  #     - amazon-restock-network

networks:
  amazon-restock-network:
    driver: bridge

# volumes:
#   postgres_data: